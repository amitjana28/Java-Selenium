Locators in Selenium :

Locaotr is a commands that tells Selenium which GUI element is need to operate. There are multiple ways to locate a elements in Selenium. 
	1) By class name : Locates elements whose class name contains the search value.
	2) By name : Locates elements whose name attribute contains the search value.
	3) By id : Locates elements whose ID attribute contains the search value.
	4) By link text : Locates anchor <a> elements whose visibe text matching the search value.
	5) By partial link text : Locates anchor <a> elements whose visibe text contains the search value.
	6) By tag name : Locates elements whose tag name matching the search value.
	7) By CSS : Locate element matching a CSS selector
	8) By xpath : Locate elements matching  an Xpath Expresions
	
	
CSS Selectors : 
	ID attribute value : # is used for ID. Example : #username
	class attribute value : . is used for class. Example : .intro
	CSS Syntex : element[attribute="value"]; 	element#id;		element.class;		element.class[attribute="value"];		element:contains("innerTExtValue")
	
Xpaths : We have two types of xpath 
	1) Absolute	xpath : Begin from root of the html document and specify the complete path of the elemnet. Not flexible can break due to any little change in UI.
			Example : /html/body/div/div[2]/span[3]/form/input[3]
	2) Relative xpath : Begin from specific element and navigate through the DOM herarchy to locate the desired element.
			Example : //form/input[3]
			
	Elements can be queried by using Axes and functions as well : 
		There are 13 different axes for querying an elements : 
			1) ancestor : ancestor is used when we want to check all the parent nodes from the context node up to root. 
				Example--> //a[@title="Pricing"]/ancestor::div
			2) ancestor-or-self : ancestor-or-self is used when we want to select all the parent nodes upto root including the context node.
				Example--> //a[@title="Pricing"]/ancestor::div 
			3) attribute : 