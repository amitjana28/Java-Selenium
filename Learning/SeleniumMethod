Selenium Methods :

1) While we use normal Java project and add Selenium and chromeDriver jar manually we need to set system property as below mentioned in our test file
	System.setProperty("webdriver.chrome.driver", "C:\\path\\of\\chromedriver\\chromedriver.exe");
	
	But when we use mave project we need to install WebDriverManager Dependency in pom.xml file and use below code in our test file
	WebDriverManager.chromedriver().setup();
	
2) To launch any url in browser we have 2 methods :
	driver.get("www.url.com");
	driver.navigate().to("www.url.com");
	
3) To go back we use below method
	driver.navigate().back();
	
4) To find elemnt we use below methods
	Return single web element : driver.findElement(By.id("username")) ----------> throws a NoSuchElementException if no elements is found
		Syntex : WebElement elementName = driver.findElement(By.selectorStrategy("LocatorValue"));
	Return list of web Elements : driver.findElements(By.name("intro")) ------------> return empty list id no elements is found
		Syntex : List<WebElement> elementName = driver.findElements(By.selectorStrategy("LocatorValue"));
		
5) To work with radio button we can simply use few methods like radioElement.isSelected() to check wheater radio button is selected or not, also we can use radioElement.click() to select radio button

6) To work with dropdown we can use Select class, where we need to create object of select class and use select class constructor where we pass our element in that constructor
	Select cityDropDown = new Select(driver.findElement(By.cssSelector("#country")));
	
	Then to select values from dropdown we have few methods like :
	1) cityDropDown.selectByValue("Value");
	2) cityDropdown.selectBYIndex(5);
	3) cityDropdown.selectByVisibleText("Faridabad");
	4) cityDropdown.selectByContainsVisibleText("somevalue");
	
7) To work with checkboxsame as radio button using isSelected() and click() methods

8) To send values in textboxes we use TextBoxElement.sendKeys("value want to send");


9) To upload file, If the element is an input element with type file, you can use the send keys method to send the full path to the file that will be uploaded.
		File uploadFile = new File("src/test/resources/selenium-snapshot.png");
		WebElement fileInput = driver.findElement(By.cssSelector("input[type=file]"));
	    fileInput.sendKeys(uploadFile.getAbsolutePath());
	    driver.findElement(By.id("file-submit")).click();